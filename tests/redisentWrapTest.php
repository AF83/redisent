<?php

require_once '../redisent.php';

/**
 * Test class for redisent.
 * Generated by PHPUnit on 2010-12-29 at 17:41:37.
 */
class redisentTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var redisent
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new RedisentWrap("localhost", 6379);
        $this->object->select(2);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }
    
    public function testInfo()
    {

        $this->assertArrayHasKey("redis_version", $this->object->info());
    }
   
    
    public function testMget()
    {   
        $keyvals=array("key1","key2", "key3");
        foreach ($keyvals as $keyval) $this->object->set($keyval,$keyval);
        $this->assertEquals($this->object->mget("key1","key2","key3"), $keyvals);
    }
    
 
    public function testKeys()
    {   $key="hashkey";
        $val= "value";
        $fields= array("a"=>1,"b"=>2);
        foreach ($fields as $k => $v) $this->object->hset($key,$k, $v);
        
        $keys=array("hashkey", "key", "key1","key2", "key3");
        $resp= $this->object->keys("*");
        foreach ($keys as $key)  $this->assertEquals($key,asort($resp));
        $resp= $this->object->keys("hashkey");
        $this->assertEquals($resp, array("hashkey"));
        $resp= $this->object->keys("InExistantKey*");
        $this->assertEquals($resp,array());
    }
    
    public function testHgetall()
    {   
        $key="hashkey";
        $val= "value";
        $fields= array("a"=>1, "b"=>2);
        foreach ($fields as $k => $v) $this->object->hset($key,$k, $v);
        $this->assertEquals($this->object->hgetall($key) ,$fields);
    }
    
}
?>
